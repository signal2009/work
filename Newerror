apiVersion: {{ deploymentApiVersion }}
kind: Deployment
metadata:
  name: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
  labels:
    app: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
spec:
  replicas: 1 
  strategy: 
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
  template:
    metadata:
      labels:
        app: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
    spec:
      minReadySeconds: 30 
      volumes:
      - name: ca-kafka-keystore
        configMap:
          name: ca-kafka-keystore
      containers:
      - name: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}-image
        image: ${IMAGE_TAG}
        volumeMounts:
        - name: ca-kafka-keystore
          mountPath: /etc/kafka/ssl/kafka.client.truststore.jks
          readOnly: false
           
      
        readinessProbe:
          initialDelaySeconds: 120
          timeoutSeconds: 5
          periodSeconds: 10   
          failureThreshold: 3      
          httpGet:
            path: /comm-hub-settlement-aggregate-api-master/actuator/health
            port: 8082
            scheme: HTTP
        imagePullPolicy: Always
        ports:
        - containerPort: 8082
          limits:
            memory: 2048Mi
          requests:
            memory: 256Mi
        env:
        - name: SERVER_SERVLET_CONTEXT_PATH
          value: /comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
        envFrom:
        - secretRef:
            name: comm-hub-settlement-aggregate-api-secrets
 
---
kind: Service
apiVersion: v1
metadata:
  name: service-comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
  labels:
    app: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
spec:
  type: ClusterIP
  ports:
    - port: 8082
  selector:
    app: comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}

---
kind: Ingress
apiVersion: {{ ingressApiVersion }}
metadata: 
  name: mds-ms-tls-ingress-comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  tls:
  - hosts:
    - {{ externalHostName  }}
    secretName: mds-ingress-tls-secret
  rules:
  - host: {{ externalHostName  }}
    http:
      paths:
      - path: /comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
        pathType: ImplementationSpecific
        backend:
          service:
            name: service-comm-hub-settlement-aggregate-api-${BRANCH_NAME_PLACEHOLDER}
            port:
              number: 8082
